using Dalamud.Plugin.Services;
using Lumina.Excel.Sheets;
using System.Collections.Generic;
using System.Linq;

namespace Tourist;

public static class Weathers
{
    public static readonly IReadOnlyDictionary<uint, uint[]> All = new Dictionary<uint, uint[]>
    {
        [2162688] = [2, 1],
        [2162689] = [1, 2],
        [2162690] = [7, 8],
        [2162691] = [2, 1],
        [2162692] = [3],
        [2162693] = [2, 1],
        [2162694] = [4],
        [2162695] = [2, 1],
        [2162696] = [3],
        [2162697] = [1, 2],
        [2162698] = [2, 1],
        [2162699] = [2, 1],
        [2162700] = [1, 2],
        [2162701] = [2, 1],
        [2162702] = [3],
        [2162703] = [2, 1],
        [2162704] = [4],
        [2162705] = [7, 8],
        [2162706] = [3],
        [2162707] = [2, 1],
        [2162708] = [2, 1],
        [2162709] = [1, 2],
        [2162710] = [7, 8],
        [2162711] = [1, 2],
        [2162712] = [7, 8],
        [2162713] = [1, 2],
        [2162714] = [6],
        [2162715] = [2, 1],
        [2162716] = [1, 2],
        [2162717] = [2, 1],
        [2162718] = [1, 2],
        [2162719] = [10],
        [2162720] = [2, 1],
        [2162721] = [3],
        [2162722] = [1, 2],
        [2162723] = [7, 8],
        [2162724] = [2, 1],
        [2162725] = [7, 8],
        [2162726] = [7, 8],
        [2162727] = [1, 2],
        [2162728] = [2, 1],
        [2162729] = [1, 2],
        [2162730] = [9],
        [2162731] = [10],
        [2162732] = [1, 2],
        [2162733] = [4],
        [2162734] = [2, 1],
        [2162735] = [2, 1],
        [2162736] = [1, 2],
        [2162737] = [3],
        [2162738] = [1, 2],
        [2162739] = [2, 1],
        [2162740] = [11],
        [2162741] = [1, 2],
        [2162742] = [1, 2],
        [2162743] = [2, 1],
        [2162744] = [8],
        [2162745] = [4],
        [2162746] = [2, 1],
        [2162747] = [14],
        [2162748] = [2, 1],
        [2162749] = [14],
        [2162750] = [1, 2],
        [2162751] = [2, 1],
        [2162752] = [2, 1],
        [2162753] = [3],
        [2162754] = [4],
        [2162755] = [1, 2],
        [2162756] = [4],
        [2162757] = [16],
        [2162758] = [2, 1],
        [2162759] = [1, 2],
        [2162760] = [16, 15],
        [2162761] = [2, 1],
        [2162762] = [2, 1],
        [2162763] = [1, 2],
        [2162764] = [17],
        [2162765] = [2, 1],
        [2162766] = [1, 2],
        [2162767] = [2, 1],
    };

    public static string WeatherString(uint rowId, IDataManager dataManager)
    {
        if (!All.TryGetValue(rowId, out var weathers))
            return "Any";

        return string.Join(", ", weathers.Order()
            .Select(id => dataManager.GetExcelSheet<Weather>().GetRowOrDefault(id))
            .Where(weather => weather.HasValue && weather.Value.RowId != 0)
            .Select(weather => weather!.Value.Name));
    }
}
